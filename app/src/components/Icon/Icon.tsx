import React from 'react';
import styled, { css } from 'styled-components';

type IconProps = {
    glyph: Glyph;
    size?: number | string;
    count?: string | null | undefined;
    onClick?: () => void;
};

type Glyph = 'cart' | 'logo' | 'trash';

export const InlineSvg = styled.svg`
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
    color: inherit;
    fill: currentColor;
`;

export const SvgWrapper = styled.div<Omit<IconProps, 'glyph'>>`
    display: inline-block;
    flex: 0 0 ${props => (props.size ? `${props.size}px` : '32px')};
    width: ${props => (props.size ? `${props.size}px` : '32px')};
    height: ${props => (props.size ? `${props.size}px` : '32px')};
    min-width: ${props => (props.size ? `${props.size}px` : '32px')};
    min-height: ${props => (props.size ? `${props.size}px` : '32px')};
    position: relative;
    color: inherit;

    ${props =>
        props.count &&
        css`
            background-color: transparent;
            &:after {
                content: ${props.count ? `'${props.count}'` : `''`};
                position: absolute;
                left: calc(100% - 16px);
                font-size: 10px;
                font-weight: 600;
                background: ${props => props.theme.palette.warning.main};
                color: ${props => props.theme.palette.warning.contrastText};
                border-radius: 50%;
                width: 24px;
                height: 24px;
                border: 3px solid ${props => props.theme.palette.primary.main};
                display: flex;
                justify-content: center;
                align-items: center;
            }
        `};
`;

export const generateGlyph = (glyph: Glyph) => {
    switch (glyph) {
        case 'cart':
            return (
                <React.Fragment>
                    <defs>
                        <filter
                            x="-2.2%"
                            y="-38.3%"
                            width="104.5%"
                            height="176.7%"
                            filterUnits="objectBoundingBox"
                            id="filter-1"
                        >
                            <feOffset
                                dx="0"
                                dy="2"
                                in="SourceAlpha"
                                result="shadowOffsetOuter1"
                            ></feOffset>
                            <feGaussianBlur
                                stdDeviation="5"
                                in="shadowOffsetOuter1"
                                result="shadowBlurOuter1"
                            ></feGaussianBlur>
                            <feColorMatrix
                                values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.195804196 0"
                                type="matrix"
                                in="shadowBlurOuter1"
                                result="shadowMatrixOuter1"
                            ></feColorMatrix>
                            <feMerge>
                                <feMergeNode in="shadowMatrixOuter1"></feMergeNode>
                                <feMergeNode in="SourceGraphic"></feMergeNode>
                            </feMerge>
                        </filter>
                    </defs>
                    <g
                        id="NewEngenColorCart"
                        stroke="none"
                        strokeWidth="1"
                        fill="none"
                        fillRule="evenodd"
                    >
                        <g
                            id="List"
                            transform="translate(-952.000000, -8.000000)"
                            fill="#FFFFFF"
                            fillRule="nonzero"
                        >
                            <g id="HeaderGroup" filter="url(#filter-1)">
                                <g
                                    id="Cart"
                                    transform="translate(961.000000, 9.000000)"
                                >
                                    <path
                                        d="M26.9010866,22.1556196 L29.9494297,12.391155 C30.0547634,12.0566393 29.9937632,11.6918643 29.7830958,11.4068943 C29.5750952,11.1249169 29.2427608,10.956329 28.8907596,10.956329 L6.9920225,10.956329 L5.74768516,7.71059632 C5.58135129,7.28197739 5.17134997,7 4.71134849,7 L1.10867023,7 C0.496001596,7.00066504 0,7.49545555 0,8.10629572 C0,8.71447573 0.496001596,9.21225892 1.10867023,9.21225892 L3.94934604,9.21225892 L5.1686833,12.3914875 C5.17134997,12.4024607 5.17434998,12.4134338 5.17968333,12.4217468 L5.21568345,12.5158501 L8.94869546,22.2527156 C8.94869546,22.2553757 8.94869546,22.2583684 8.95136214,22.2583684 L9.95169869,24.870982 C8.8986953,25.4073376 8.17535964,26.499335 8.17535964,27.75726 C8.17535964,29.5458878 9.633031,31 11.4260368,31 C13.2163759,31 14.6740472,29.5458878 14.6740472,27.75726 C14.6740472,27.3978054 14.6157137,27.0523166 14.5050467,26.7287741 L21.1674014,26.7287741 C21.0564011,27.0523166 20.9984009,27.3978054 20.9984009,27.75726 C20.9984009,29.5458878 22.4560723,31 24.249078,31 C26.0394171,31 27.4970885,29.5458878 27.4970885,27.75726 C27.4970885,25.9712924 26.0394171,24.5171802 24.249078,24.5171802 L12.1883726,24.5171802 L11.5813706,22.9330525 L25.8424165,22.9330525 C26.327418,22.9323875 26.7570861,22.6174906 26.9010866,22.1556196 Z M24.0012916,27 C24.5515015,27 25,27.4481757 25,27.9987084 C25,28.5518243 24.5518243,29 24.0012916,29 C23.4481757,29 23,28.5518243 23,27.9987084 C23,27.4481757 23.4481757,27 24.0012916,27 Z M21.2665785,13 L27,13 L25.9439391,16 L21,16 L21.2665785,13 Z M8,13 L13.7537797,13 L14,16 L9.20826905,16 L8,13 Z M12,27.9987084 C12,28.5518243 11.5518243,29 11.0012916,29 C10.4481757,29 10,28.5518243 10,27.9987084 C10,27.4484985 10.4481757,27 11.0012916,27 C11.5518243,27.0003229 12,27.4484985 12,27.9987084 Z M11.1463463,21 L10,18 L14.7652813,18 L15,21 L11.1463463,21 Z M19.7391587,21 L15.2550689,21 L15,18 L20,18 L19.7391587,21 Z M19.7476232,16 L15.2495622,16 L15,13 L20,13 L19.7476232,16 Z M21,21 L21.240094,18 L26,18 L25.0453324,21 L21,21 Z"
                                        id="CartIcon"
                                    ></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </React.Fragment>
            );
        case 'logo':
            return (
                <React.Fragment>
                    <defs>
                        <filter
                            x="-2.2%"
                            y="-38.3%"
                            width="104.5%"
                            height="176.7%"
                            filterUnits="objectBoundingBox"
                            id="filter-1"
                        >
                            <feOffset
                                dx="0"
                                dy="2"
                                in="SourceAlpha"
                                result="shadowOffsetOuter1"
                            ></feOffset>
                            <feGaussianBlur
                                stdDeviation="5"
                                in="shadowOffsetOuter1"
                                result="shadowBlurOuter1"
                            ></feGaussianBlur>
                            <feColorMatrix
                                values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.195804196 0"
                                type="matrix"
                                in="shadowBlurOuter1"
                                result="shadowMatrixOuter1"
                            ></feColorMatrix>
                            <feMerge>
                                <feMergeNode in="shadowMatrixOuter1"></feMergeNode>
                                <feMergeNode in="SourceGraphic"></feMergeNode>
                            </feMerge>
                        </filter>
                    </defs>
                    <g
                        id="NewEngenColorCart"
                        stroke="none"
                        strokeWidth="1"
                        fill="none"
                        fillRule="evenodd"
                    >
                        <g
                            id="List"
                            transform="translate(-15.000000, -8.000000)"
                            fill="#FFFFFF"
                            fillRule="nonzero"
                        >
                            <g id="HeaderGroup" filter="url(#filter-1)">
                                <path
                                    d="M44.8571334,24.98983 L51.5532802,21.1830597 C51.5612297,21.4323696 51.5691792,21.6659887 51.5762454,21.8996077 C51.6009773,22.7556298 51.6257091,23.6116519 51.650441,24.467674 C51.6672233,25.0647973 51.6804725,25.6627924 51.6972548,26.2599157 C51.7193368,27.0584048 51.7458352,27.8560221 51.7679172,28.6536394 C51.7855828,29.2446608 51.7979488,29.8356821 51.8147311,30.4275752 C51.8376964,31.2347813 51.8633115,32.0419875 51.8862768,32.8500654 C51.8986427,33.2728461 51.9074755,33.6964986 51.9189581,34.1192794 C51.9445733,35.0302194 51.9693051,35.9411594 51.9984534,36.8520994 C52.0083266,36.9222107 51.9702043,36.9903582 51.9048257,37.0194683 C51.2432488,37.3882028 50.5852051,37.7612959 49.9262781,38.1326456 C49.8953633,38.1500799 49.8635652,38.1657707 49.8220511,38.1866918 C46.4561649,32.541479 43.0908675,26.8988813 39.726159,21.2588987 L39.7014272,21.2588987 L39.7014272,27.9318611 L41.9864729,26.6556734 C42.4095641,27.3783234 42.8291222,28.0957431 43.2530967,28.82188 C43.2186487,28.8428011 43.1895005,28.8619788 43.159469,28.8785413 C42.0300481,29.5050123 40.9000384,30.1311928 39.7694398,30.7570827 C39.7108147,30.7826439 39.675266,30.8422853 39.6811118,30.9052739 C39.6811118,31.5974139 39.6811118,32.289554 39.6811118,32.981694 C39.6764009,34.8924887 39.6713957,36.8032835 39.666096,38.7140782 C39.666096,39.3132355 39.666096,39.9115211 39.666096,40.5089351 C39.6625629,41.6532035 39.6575576,42.7977626 39.6510802,43.9426122 C39.6519945,43.9818185 39.6359305,44.0195502 39.6069162,44.0463461 C39.0522163,44.3636496 38.4948665,44.6774662 37.928684,45 L32.1264167,35.0572425 L25.5018156,38.7184367 C25.4953382,38.4923725 25.4888608,38.2674706 25.4823835,38.0437309 C25.4523519,37.1069301 25.4229093,36.1704199 25.3940554,35.2342002 C25.3755066,34.6562545 25.3604908,34.0774372 25.3419419,33.4994915 C25.3077884,32.4237978 25.2727516,31.3486852 25.2368316,30.2741537 C25.2182827,29.696208 25.2023836,29.1182624 25.184718,28.5403167 L25.086674,25.4553247 C25.0601755,24.6481186 25.0398601,23.8443992 25.0027623,23.0337062 C24.9850038,22.9129029 25.0542902,22.7960434 25.1697023,22.752143 C25.8206797,22.3921255 26.4663575,22.023391 27.1129186,21.6572715 L27.1932971,21.6136859 L37.1195993,38.6120878 L37.1407981,38.6077292 L37.1407981,32.2215604 L35.0456576,33.382682 C34.6207998,32.6748511 34.1994752,31.9696353 33.7728509,31.253959 C33.8064155,31.2330379 33.8346805,31.2147319 33.8611789,31.1981694 C34.929359,30.6013366 35.9975391,30.0047944 37.0657193,29.4085428 C37.1247643,29.3820381 37.1602452,29.32146 37.1540473,29.2577365 C37.1540473,28.3494116 37.1593469,27.4410867 37.1602302,26.5318902 C37.1602302,24.9046927 37.1617024,23.2748801 37.1646466,21.6424524 C37.1646466,20.7890455 37.1699463,19.9356385 37.1717129,19.0813599 C37.1787791,18.0724975 37.1823122,17.0639256 37.1823122,16.0556443 C37.1770421,15.9938712 37.212713,15.935785 37.2706402,15.9118117 C37.7882424,15.622403 38.3049613,15.3286358 38.8216802,15.0400988 L38.8985256,15 L44.8571334,24.98983 Z M46.1502555,27.1569083 L49.3503795,32.5188145 L49.3662785,32.5118408 L49.3662785,25.3515909 L46.1502555,27.1569083 Z M27.6693851,27.4184222 L27.6420034,27.4227808 C27.7612462,29.7668168 27.8813723,32.1117245 28.0014984,34.4714514 L30.881875,32.9189307 C29.8072175,31.0801976 28.7363875,29.2466948 27.6693851,27.4184222 Z M28,21.1834793 L36,17 L36,17.2132666 C36,17.9456821 35.9978079,18.6780976 35.9934238,19.4105131 C35.9993944,19.4573501 35.9714539,19.5023213 35.9243732,19.5216521 L29.2100288,22.9797247 C29.1993424,22.9857322 29.1878339,22.9902378 29.1672832,23 L28,21.1834793 Z M40.0219553,42 C40.0219553,41.9557611 40.0154367,41.9340165 40.0154367,41.9122719 C40.0105477,41.1699575 40.0059303,40.4273932 40.0015845,39.6845789 C39.9932083,39.6380567 40.0186103,39.591914 40.0643267,39.5706073 C42.323048,38.3874031 44.581226,37.2026993 46.8388608,36.0164959 C46.8470092,36.011997 46.8551575,36.0089978 46.8755284,36 L48,37.7868033 L40.0219553,42 Z"
                                    id="NewEngen-Logo"
                                ></path>
                            </g>
                        </g>
                    </g>
                </React.Fragment>
            );
        case 'trash':
            return (
                <g
                    id="NewEngenColorCart"
                    stroke="none"
                    strokeWidth="1"
                    fill="none"
                    fillRule="evenodd"
                >
                    <g
                        id="Cart"
                        transform="translate(-118.000000, -163.000000)"
                        fill="#D5D5D5"
                        fillRule="nonzero"
                    >
                        <g
                            id="CurrentColorCart"
                            transform="translate(20.000000, 99.000000)"
                        >
                            <g
                                id="Colors"
                                transform="translate(0.000000, 54.000000)"
                            >
                                <g id="Palette">
                                    <path
                                        d="M111.269231,12.3076923 C112.224713,12.3086464 112.999046,13.0829795 113,14.0384615 L113,15.1923077 C113,15.5109335 112.741703,15.7692308 112.423077,15.7692308 L111.846154,15.7692308 L111.846154,26.7307692 C111.8452,27.6862512 111.070867,28.4605844 110.115385,28.4615385 L100.884615,28.4615385 C99.9291334,28.4605844 99.1548002,27.6862512 99.1538462,26.7307692 L99.1538462,15.7692308 L98.5769231,15.7692308 C98.2582973,15.7692308 98,15.5109335 98,15.1923077 L98,14.0384615 C98.0009541,13.0829795 98.7752872,12.3086464 99.7307692,12.3076923 L103.192308,12.3076923 L103.192308,11.7307692 C103.193262,10.7752872 103.967595,10.0009541 104.923077,10 L106.076923,10 C107.032405,10.0009541 107.806738,10.7752872 107.807692,11.7307692 L107.807692,12.3076923 L111.269231,12.3076923 Z M104.346154,11.7307692 L104.346154,12.3076923 L106.653846,12.3076923 L106.653846,11.7307692 C106.653846,11.4121434 106.395549,11.1538462 106.076923,11.1538462 L104.923077,11.1538462 C104.604451,11.1538462 104.346154,11.4121434 104.346154,11.7307692 Z M110.692308,26.7307692 L110.692308,15.7692308 L100.307692,15.7692308 L100.307692,26.7307692 C100.307692,27.049395 100.56599,27.3076923 100.884615,27.3076923 L110.115385,27.3076923 C110.43401,27.3076923 110.692308,27.049395 110.692308,26.7307692 Z M111.846154,14.6153846 L111.846154,14.0384615 C111.846154,13.7198357 111.587857,13.4615385 111.269231,13.4615385 L99.7307692,13.4615385 C99.4121434,13.4615385 99.1538462,13.7198357 99.1538462,14.0384615 L99.1538462,14.6153846 L111.846154,14.6153846 Z M105.5,25 C105.181374,25 104.923077,24.7417027 104.923077,24.4230769 L104.923077,18.6538462 C104.923077,18.3352203 105.181374,18.0769231 105.5,18.0769231 C105.818626,18.0769231 106.076923,18.3352203 106.076923,18.6538462 L106.076923,24.4230769 C106.076923,24.7417027 105.818626,25 105.5,25 Z M108.384615,25 C108.06599,25 107.807692,24.7417027 107.807692,24.4230769 L107.807692,18.6538462 C107.807692,18.3352203 108.06599,18.0769231 108.384615,18.0769231 C108.703241,18.0769231 108.961538,18.3352203 108.961538,18.6538462 L108.961538,24.4230769 C108.961538,24.7417027 108.703241,25 108.384615,25 Z M102.615385,25 C102.296759,25 102.038462,24.7417027 102.038462,24.4230769 L102.038462,18.6538462 C102.038462,18.3352203 102.296759,18.0769231 102.615385,18.0769231 C102.93401,18.0769231 103.192308,18.3352203 103.192308,18.6538462 L103.192308,24.4230769 C103.192308,24.7417027 102.93401,25 102.615385,25 Z"
                                        id="TrashIcon"
                                    ></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </g>
            );
        default:
            throw new Error(`No ${glyph} icon`);
    }
};

const Icon: React.FC<IconProps> = ({ size = 32, count, onClick, glyph }) => {
    const viewBox = `0 0 ${size} ${size}`;
    return (
        <SvgWrapper size={size} count={count} onClick={onClick}>
            <InlineSvg
                fillRule="evenodd"
                clipRule="evenodd"
                strokeLinejoin="round"
                strokeMiterlimit="1.414"
                xmlns="http://www.w3.org/2000/svg"
                aria-labelledby="title"
                viewBox={viewBox}
                preserveAspectRatio="xMidYMid meet"
                id={glyph}
            >
                <title id="title">{glyph}</title>
                {generateGlyph(glyph)}
            </InlineSvg>
        </SvgWrapper>
    );
};

export default Icon;
